diff --git a/.medusa/server/src/admin/index.js b/.medusa/server/src/admin/index.js
index f2ac755ff554cfd036eb33c6f1aa4c32cef49f50..b59c2f301b2f8f39bb85ecdd50e6f2d83b64d935 100644
--- a/.medusa/server/src/admin/index.js
+++ b/.medusa/server/src/admin/index.js
@@ -207,7 +207,8 @@ const ProductReviewDetailsDrawer = ({
       /* @__PURE__ */ jsxRuntime.jsx(SectionRow, { title: "Status", value: /* @__PURE__ */ jsxRuntime.jsx(StatusValue, {}) }),
       /* @__PURE__ */ jsxRuntime.jsx(SectionRow, { title: "Created At", value: /* @__PURE__ */ jsxRuntime.jsx(CreatedAtValue, {}) }),
       /* @__PURE__ */ jsxRuntime.jsx(SectionRow, { title: "Product", value: /* @__PURE__ */ jsxRuntime.jsx(ProductValue, {}) }),
-      /* @__PURE__ */ jsxRuntime.jsx(SectionRow, { title: "Order", value: /* @__PURE__ */ jsxRuntime.jsx(OrderValue, {}) }),
+      review.order && review.order.id && /* @__PURE__ */ jsxRuntime.jsx(SectionRow, { title: "Order", value: /* @__PURE__ */ jsxRuntime.jsx(OrderValue, {}) }),
+
       /* @__PURE__ */ jsxRuntime.jsx(
         SectionRow,
         {
@@ -261,10 +262,14 @@ const getColumns = (showColumns, actions) => {
       }
     }),
     columnHelper.accessor("order", {
-      id: "order",
+      id: "order", 
       header: "Order",
       enableSorting: false,
       cell: ({ row }) => {
+        // Solo mostrar si existe order.id
+        if (!row.original.order?.id) {
+          return /* @__PURE__ */ jsxRuntime.jsx("span", { className: "text-gray-400", children: "No order" });
+        }
         return /* @__PURE__ */ jsxRuntime.jsx(reactRouterDom.Link, { to: `/orders/${row.original.order.id}`, children: /* @__PURE__ */ jsxRuntime.jsxs("span", { className: "text-sm whitespace-normal break-words hover:underline", children: [
           "#",
           row.original.order.display_id
diff --git a/.medusa/server/src/admin/index.mjs b/.medusa/server/src/admin/index.mjs
index 729b34734f4db32ee61c345941a79755edf14b3e..914a1c1eea54fb29ef82302a17de5c407a4da3c8 100644
--- a/.medusa/server/src/admin/index.mjs
+++ b/.medusa/server/src/admin/index.mjs
@@ -188,7 +188,8 @@ const ProductReviewDetailsDrawer = ({
       /* @__PURE__ */ jsx(SectionRow, { title: "Status", value: /* @__PURE__ */ jsx(StatusValue, {}) }),
       /* @__PURE__ */ jsx(SectionRow, { title: "Created At", value: /* @__PURE__ */ jsx(CreatedAtValue, {}) }),
       /* @__PURE__ */ jsx(SectionRow, { title: "Product", value: /* @__PURE__ */ jsx(ProductValue, {}) }),
-      /* @__PURE__ */ jsx(SectionRow, { title: "Order", value: /* @__PURE__ */ jsx(OrderValue, {}) }),
+      review.order && review.order.id && /* @__PURE__ */ jsxRuntime.jsx(SectionRow, { title: "Order", value: /* @__PURE__ */ jsxRuntime.jsx(OrderValue, {}) }),
+
       /* @__PURE__ */ jsx(
         SectionRow,
         {
@@ -242,14 +243,18 @@ const getColumns = (showColumns, actions) => {
       }
     }),
     columnHelper.accessor("order", {
-      id: "order",
+      id: "order", 
       header: "Order",
       enableSorting: false,
       cell: ({ row }) => {
-        return /* @__PURE__ */ jsx(Link, { to: `/orders/${row.original.order.id}`, children: /* @__PURE__ */ jsxs("span", { className: "text-sm whitespace-normal break-words hover:underline", children: [
-          "#",
-          row.original.order.display_id
-        ] }) });
+        // Solo mostrar si existe order.id
+        if (!row.original.order?.id) {
+          return /* @__PURE__ */ jsx("span", { className: "text-gray-400", children: "No order" });
+        }
+          return /* @__PURE__ */ jsx(Link, { to: `/orders/${row.original.order.id}`, children: /* @__PURE__ */ jsxs("span", { className: "text-sm whitespace-normal break-words hover:underline", children: [
+            "#",
+            row.original.order.display_id
+          ] }) });
       }
     }),
     columnHelper.accessor("status", {
diff --git a/.medusa/server/src/workflows/upsert-product-reviews.js b/.medusa/server/src/workflows/upsert-product-reviews.js
index e2ce1b72bcfb05bcbfb8d7d7ee64b47f1965554a..1b98403d9860b66bcbddc0ce3cec611043eef62d 100644
--- a/.medusa/server/src/workflows/upsert-product-reviews.js
+++ b/.medusa/server/src/workflows/upsert-product-reviews.js
@@ -18,10 +18,10 @@ exports.upsertProductReviewsWorkflow = (0, workflows_sdk_2.createWorkflow)("upse
             "shipping_address.*",
             "customer.*",
             "items.*",
-            "items.product_review.*",
+            // "items.product_review.*",
         ],
         filters: {
-            id: orderIds,
+          id: { $in: orderIds },
         },
     });
     const inputs = (0, workflows_sdk_1.transform)({ orders, reviews: input.reviews }, (values) => {
